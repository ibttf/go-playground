{
  "title": "Advanced Basics",
  "summary": "Venture further into the depths of Go, exploring the advanced basics such as pointers, structs, interfaces, and error handling.",
  "topic": {
    "name": "Basics",
    "slug": "basics",
    "type": "NameSlugPair",
    "_raw": {}
  },
  "next": {
    "name": "Interfaces and Methods",
    "slug": "/basics/interfaces-and-methods",
    "type": "NameSlugPair",
    "_raw": {}
  },
  "body": {
    "raw": "\n## Pointers\n\nIn Go, pointers provide a way to directly access memory locations and work with references to data.\n\n### Understanding Pointers\n\nA pointer references a location in memory. It offers a level of indirection, enabling you to operate on the underlying data.\n\n```go\nvar x int = 10\nvar y *int = &x\n```\n\n### Dereferencing Pointers\n\nUse the **\\*** operator to access the value at the referenced memory location.\n\n```go\nfmt.Println(*y) // Outputs: 10\n```\n\n### Pointer Arithmetic\n\nUnlike some other languages, Go doesn't support direct pointer arithmetic for safety reasons. Instead, you'll use slices and arrays for such operations.\n\n## Structs\n\nStructs are composite data types that group together zero or more fields, each of varying types.\n\n### Defining and Using Structs\n\n```go\ntype Person struct {\n    FirstName string\n    LastName  string\n    Age       int\n}\n\nperson := Person{\"John\", \"Doe\", 30}\n```\n\n### Accessing Struct Fields\n\nYou can access individual fields using the dot notation.\n\n```go\nname := person.FirstName // John\n```\n\n## Interfaces\n\nInterfaces in Go define a set of method signatures. They provide a way to specify the behavior of an object.\n###Defining and Implementing Interfaces\n\n```go\ntype Writer interface {\n    Write([]byte) (int, error)\n}\n\ntype MyWriter struct{}\n\nfunc (mw MyWriter) Write(data []byte) (int, error) {\n    // Implementation here\n    return len(data), nil\n}\n```\n\n### Interface Satisfaction\n\nA type satisfies an interface if it implements all the methods the interface requires.\n\n## Error Handling\n\nGo handles errors as values, leading to an explicit and straightforward approach to error management.\n\n### The error Type\n\nThe built-in **error** type is at the heart of error handling in Go.\n\n```go\nfunc divide(a, b float64) (float64, error) {\n    if b == 0.0 {\n        return 0.0, errors.New(\"cannot divide by zero\")\n    }\n    return a / b, nil\n}\n```\n\n### Custom Errors\n\nYou can define your custom error types, allowing for richer error information.\n\n```go\ntype MyError struct {\n    Reason string\n}\n\nfunc (me MyError) Error() string {\n    return me.Reason\n}\n```\n\n<Banner type=\"important\">\n  Note: As you dive deeper into Go's advanced basics, it's crucial to understand\n  the intricacies of these topics. Ensure you're hands-on with these concepts\n  and make it a point to work on small projects to solidify your grasp.\n</Banner>\n",
    "code": "var Component=(()=>{var h=Object.create;var c=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var B=Object.getOwnPropertyNames;var y=Object.getPrototypeOf,m=Object.prototype.hasOwnProperty;var g=(l,e)=>()=>(e||l((e={exports:{}}).exports,e),e.exports),A=(l,e)=>{for(var r in e)c(l,r,{get:e[r],enumerable:!0})},o=(l,e,r,a)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let s of B(e))!m.call(l,s)&&s!==r&&c(l,s,{get:()=>e[s],enumerable:!(a=p(e,s))||a.enumerable});return l};var u=(l,e,r)=>(r=l!=null?h(y(l)):{},o(e||!l||!l.__esModule?c(r,\"default\",{value:l,enumerable:!0}):r,l)),F=l=>o(c({},\"__esModule\",{value:!0}),l);var i=g((b,t)=>{t.exports=_jsx_runtime});var v={};A(v,{default:()=>C,frontmatter:()=>f});var n=u(i()),f={title:\"Advanced Basics\",summary:\"Venture further into the depths of Go, exploring the advanced basics such as pointers, structs, interfaces, and error handling.\",topic:{name:\"Basics\",slug:\"basics\"},next:{name:\"Interfaces and Methods\",slug:\"/basics/interfaces-and-methods\"}};function d(l){let e=Object.assign({h2:\"h2\",p:\"p\",h3:\"h3\",div:\"div\",pre:\"pre\",code:\"code\",span:\"span\",strong:\"strong\"},l.components),{Banner:r}=e;return r||N(\"Banner\",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.h2,{id:\"pointers\",children:\"Pointers\"}),`\n`,(0,n.jsx)(e.p,{children:\"In Go, pointers provide a way to directly access memory locations and work with references to data.\"}),`\n`,(0,n.jsx)(e.h3,{id:\"understanding-pointers\",children:\"Understanding Pointers\"}),`\n`,(0,n.jsx)(e.p,{children:\"A pointer references a location in memory. It offers a level of indirection, enabling you to operate on the underlying data.\"}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"go\",\"data-theme\":\"default\",children:(0,n.jsxs)(e.code,{\"data-language\":\"go\",\"data-theme\":\"default\",children:[(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#C678DD\"},children:\"var\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\" \"}),(0,n.jsx)(e.span,{style:{color:\"#E06C75\"},children:\"x\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\" \"}),(0,n.jsx)(e.span,{style:{color:\"#C678DD\"},children:\"int\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\" \"}),(0,n.jsx)(e.span,{style:{color:\"#E5C07B\"},children:\"=\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\" \"}),(0,n.jsx)(e.span,{style:{color:\"#D19A66\"},children:\"10\"})]}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#C678DD\"},children:\"var\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\" \"}),(0,n.jsx)(e.span,{style:{color:\"#E06C75\"},children:\"y\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\" \"}),(0,n.jsx)(e.span,{style:{color:\"#C678DD\"},children:\"*int\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\" \"}),(0,n.jsx)(e.span,{style:{color:\"#E5C07B\"},children:\"=\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\" \"}),(0,n.jsx)(e.span,{style:{color:\"#C678DD\"},children:\"&\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\"x\"})]})]})})}),`\n`,(0,n.jsx)(e.h3,{id:\"dereferencing-pointers\",children:\"Dereferencing Pointers\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"Use the \",(0,n.jsx)(e.strong,{children:\"*\"}),\" operator to access the value at the referenced memory location.\"]}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"go\",\"data-theme\":\"default\",children:(0,n.jsx)(e.code,{\"data-language\":\"go\",\"data-theme\":\"default\",children:(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\"fmt.\"}),(0,n.jsx)(e.span,{style:{color:\"#56B6C2\"},children:\"Println\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\"(\"}),(0,n.jsx)(e.span,{style:{color:\"#C678DD\"},children:\"*\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\"y) \"}),(0,n.jsx)(e.span,{style:{color:\"#7F848E\",fontStyle:\"italic\"},children:\"// Outputs: 10\"})]})})})}),`\n`,(0,n.jsx)(e.h3,{id:\"pointer-arithmetic\",children:\"Pointer Arithmetic\"}),`\n`,(0,n.jsx)(e.p,{children:\"Unlike some other languages, Go doesn't support direct pointer arithmetic for safety reasons. Instead, you'll use slices and arrays for such operations.\"}),`\n`,(0,n.jsx)(e.h2,{id:\"structs\",children:\"Structs\"}),`\n`,(0,n.jsx)(e.p,{children:\"Structs are composite data types that group together zero or more fields, each of varying types.\"}),`\n`,(0,n.jsx)(e.h3,{id:\"defining-and-using-structs\",children:\"Defining and Using Structs\"}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"go\",\"data-theme\":\"default\",children:(0,n.jsxs)(e.code,{\"data-language\":\"go\",\"data-theme\":\"default\",children:[(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#C678DD\"},children:\"type\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\" \"}),(0,n.jsx)(e.span,{style:{color:\"#E5C07B\"},children:\"Person\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\" \"}),(0,n.jsx)(e.span,{style:{color:\"#C678DD\"},children:\"struct\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\" {\"})]}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\"    FirstName \"}),(0,n.jsx)(e.span,{style:{color:\"#C678DD\"},children:\"string\"})]}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\"    LastName  \"}),(0,n.jsx)(e.span,{style:{color:\"#C678DD\"},children:\"string\"})]}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\"    Age       \"}),(0,n.jsx)(e.span,{style:{color:\"#C678DD\"},children:\"int\"})]}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\"}\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:\" \"}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#E06C75\"},children:\"person\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\" \"}),(0,n.jsx)(e.span,{style:{color:\"#E5C07B\"},children:\":=\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\" Person{\"}),(0,n.jsx)(e.span,{style:{color:\"#98C379\"},children:'\"John\"'}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\", \"}),(0,n.jsx)(e.span,{style:{color:\"#98C379\"},children:'\"Doe\"'}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\", \"}),(0,n.jsx)(e.span,{style:{color:\"#D19A66\"},children:\"30\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\"}\"})]})]})})}),`\n`,(0,n.jsx)(e.h3,{id:\"accessing-struct-fields\",children:\"Accessing Struct Fields\"}),`\n`,(0,n.jsx)(e.p,{children:\"You can access individual fields using the dot notation.\"}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"go\",\"data-theme\":\"default\",children:(0,n.jsx)(e.code,{\"data-language\":\"go\",\"data-theme\":\"default\",children:(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#E06C75\"},children:\"name\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\" \"}),(0,n.jsx)(e.span,{style:{color:\"#E5C07B\"},children:\":=\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\" person.FirstName \"}),(0,n.jsx)(e.span,{style:{color:\"#7F848E\",fontStyle:\"italic\"},children:\"// John\"})]})})})}),`\n`,(0,n.jsx)(e.h2,{id:\"interfaces\",children:\"Interfaces\"}),`\n`,(0,n.jsx)(e.p,{children:`Interfaces in Go define a set of method signatures. They provide a way to specify the behavior of an object.\n###Defining and Implementing Interfaces`}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"go\",\"data-theme\":\"default\",children:(0,n.jsxs)(e.code,{\"data-language\":\"go\",\"data-theme\":\"default\",children:[(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#C678DD\"},children:\"type\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\" \"}),(0,n.jsx)(e.span,{style:{color:\"#E5C07B\"},children:\"Writer\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\" \"}),(0,n.jsx)(e.span,{style:{color:\"#C678DD\"},children:\"interface\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\" {\"})]}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\"    \"}),(0,n.jsx)(e.span,{style:{color:\"#56B6C2\"},children:\"Write\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\"([]\"}),(0,n.jsx)(e.span,{style:{color:\"#C678DD\"},children:\"byte\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\") (\"}),(0,n.jsx)(e.span,{style:{color:\"#C678DD\"},children:\"int\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\", \"}),(0,n.jsx)(e.span,{style:{color:\"#C678DD\"},children:\"error\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\")\"})]}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\"}\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:\" \"}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#C678DD\"},children:\"type\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\" \"}),(0,n.jsx)(e.span,{style:{color:\"#E5C07B\"},children:\"MyWriter\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\" \"}),(0,n.jsx)(e.span,{style:{color:\"#C678DD\"},children:\"struct\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\"{}\"})]}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:\" \"}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#C678DD\"},children:\"func\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\" (mw MyWriter) \"}),(0,n.jsx)(e.span,{style:{color:\"#61AFEF\"},children:\"Write\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\"(data []\"}),(0,n.jsx)(e.span,{style:{color:\"#C678DD\"},children:\"byte\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\") (\"}),(0,n.jsx)(e.span,{style:{color:\"#C678DD\"},children:\"int\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\", \"}),(0,n.jsx)(e.span,{style:{color:\"#C678DD\"},children:\"error\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\") {\"})]}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\"    \"}),(0,n.jsx)(e.span,{style:{color:\"#7F848E\",fontStyle:\"italic\"},children:\"// Implementation here\"})]}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\"    \"}),(0,n.jsx)(e.span,{style:{color:\"#C678DD\"},children:\"return\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\" \"}),(0,n.jsx)(e.span,{style:{color:\"#56B6C2\"},children:\"len\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\"(data), \"}),(0,n.jsx)(e.span,{style:{color:\"#D19A66\"},children:\"nil\"})]}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\"}\"})})]})})}),`\n`,(0,n.jsx)(e.h3,{id:\"interface-satisfaction\",children:\"Interface Satisfaction\"}),`\n`,(0,n.jsx)(e.p,{children:\"A type satisfies an interface if it implements all the methods the interface requires.\"}),`\n`,(0,n.jsx)(e.h2,{id:\"error-handling\",children:\"Error Handling\"}),`\n`,(0,n.jsx)(e.p,{children:\"Go handles errors as values, leading to an explicit and straightforward approach to error management.\"}),`\n`,(0,n.jsx)(e.h3,{id:\"the-error-type\",children:\"The error Type\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"The built-in \",(0,n.jsx)(e.strong,{children:\"error\"}),\" type is at the heart of error handling in Go.\"]}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"go\",\"data-theme\":\"default\",children:(0,n.jsxs)(e.code,{\"data-language\":\"go\",\"data-theme\":\"default\",children:[(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#C678DD\"},children:\"func\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\" \"}),(0,n.jsx)(e.span,{style:{color:\"#61AFEF\"},children:\"divide\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\"(a, b \"}),(0,n.jsx)(e.span,{style:{color:\"#C678DD\"},children:\"float64\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\") (\"}),(0,n.jsx)(e.span,{style:{color:\"#C678DD\"},children:\"float64\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\", \"}),(0,n.jsx)(e.span,{style:{color:\"#C678DD\"},children:\"error\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\") {\"})]}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\"    \"}),(0,n.jsx)(e.span,{style:{color:\"#C678DD\"},children:\"if\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\" b \"}),(0,n.jsx)(e.span,{style:{color:\"#56B6C2\"},children:\"==\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\" \"}),(0,n.jsx)(e.span,{style:{color:\"#D19A66\"},children:\"0.0\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\" {\"})]}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\"        \"}),(0,n.jsx)(e.span,{style:{color:\"#C678DD\"},children:\"return\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\" \"}),(0,n.jsx)(e.span,{style:{color:\"#D19A66\"},children:\"0.0\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\", errors.\"}),(0,n.jsx)(e.span,{style:{color:\"#56B6C2\"},children:\"New\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\"(\"}),(0,n.jsx)(e.span,{style:{color:\"#98C379\"},children:'\"cannot divide by zero\"'}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\")\"})]}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\"    }\"})}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\"    \"}),(0,n.jsx)(e.span,{style:{color:\"#C678DD\"},children:\"return\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\" a \"}),(0,n.jsx)(e.span,{style:{color:\"#C678DD\"},children:\"/\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\" b, \"}),(0,n.jsx)(e.span,{style:{color:\"#D19A66\"},children:\"nil\"})]}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\"}\"})})]})})}),`\n`,(0,n.jsx)(e.h3,{id:\"custom-errors\",children:\"Custom Errors\"}),`\n`,(0,n.jsx)(e.p,{children:\"You can define your custom error types, allowing for richer error information.\"}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"go\",\"data-theme\":\"default\",children:(0,n.jsxs)(e.code,{\"data-language\":\"go\",\"data-theme\":\"default\",children:[(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#C678DD\"},children:\"type\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\" \"}),(0,n.jsx)(e.span,{style:{color:\"#E5C07B\"},children:\"MyError\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\" \"}),(0,n.jsx)(e.span,{style:{color:\"#C678DD\"},children:\"struct\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\" {\"})]}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\"    Reason \"}),(0,n.jsx)(e.span,{style:{color:\"#C678DD\"},children:\"string\"})]}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\"}\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:\" \"}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#C678DD\"},children:\"func\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\" (me MyError) \"}),(0,n.jsx)(e.span,{style:{color:\"#61AFEF\"},children:\"Error\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\"() \"}),(0,n.jsx)(e.span,{style:{color:\"#C678DD\"},children:\"string\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\" {\"})]}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\"    \"}),(0,n.jsx)(e.span,{style:{color:\"#C678DD\"},children:\"return\"}),(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\" me.Reason\"})]}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{style:{color:\"#ABB2BF\"},children:\"}\"})})]})})}),`\n`,(0,n.jsx)(r,{type:\"important\",children:(0,n.jsx)(e.p,{children:`Note: As you dive deeper into Go's advanced basics, it's crucial to understand\nthe intricacies of these topics. Ensure you're hands-on with these concepts\nand make it a point to work on small projects to solidify your grasp.`})})]})}function D(l={}){let{wrapper:e}=l.components||{};return e?(0,n.jsx)(e,Object.assign({},l,{children:(0,n.jsx)(d,l)})):d(l)}var C=D;function N(l,e){throw new Error(\"Expected \"+(e?\"component\":\"object\")+\" `\"+l+\"` to be defined: you likely forgot to import, pass, or provide it.\")}return F(v);})();\n;return Component;"
  },
  "_id": "advanced-basics.mdx",
  "_raw": {
    "sourceFilePath": "advanced-basics.mdx",
    "sourceFileName": "advanced-basics.mdx",
    "sourceFileDir": ".",
    "contentType": "mdx",
    "flattenedPath": "advanced-basics"
  },
  "type": "Post",
  "slug": "advanced-basics"
}